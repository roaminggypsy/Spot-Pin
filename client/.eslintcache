[{"/Users/lemonade/Documents/map/client/src/index.js":"1","/Users/lemonade/Documents/map/client/src/reportWebVitals.js":"2","/Users/lemonade/Documents/map/client/src/pages/Splash.js":"3","/Users/lemonade/Documents/map/client/src/pages/App.js":"4","/Users/lemonade/Documents/map/client/src/context.js":"5","/Users/lemonade/Documents/map/client/src/withRoot.js":"6","/Users/lemonade/Documents/map/client/src/components/Header.js":"7","/Users/lemonade/Documents/map/client/src/components/Map.js":"8","/Users/lemonade/Documents/map/client/src/components/Auth/Signout.js":"9","/Users/lemonade/Documents/map/client/src/components/Auth/Login.js":"10","/Users/lemonade/Documents/map/client/src/graphql/queries.js":"11","/Users/lemonade/Documents/map/client/src/ProtectedRoute.js":"12","/Users/lemonade/Documents/map/client/src/reducer.js":"13","/Users/lemonade/Documents/map/client/src/serviceWorker.js":"14","/Users/lemonade/Documents/map/client/src/components/PinIcon.js":"15","/Users/lemonade/Documents/map/client/src/components/Blog.js":"16","/Users/lemonade/Documents/map/client/src/components/Pin/NoContent.js":"17","/Users/lemonade/Documents/map/client/src/components/Pin/CreatePin.js":"18","/Users/lemonade/Documents/map/client/src/graphql/mutations.js":"19","/Users/lemonade/Documents/map/client/src/client.js":"20","/Users/lemonade/Documents/map/client/src/components/Pin/PinContent.js":"21","/Users/lemonade/Documents/map/client/src/components/Comment/Comments.js":"22","/Users/lemonade/Documents/map/client/src/components/Comment/CreateComment.js":"23","/Users/lemonade/Documents/map/client/src/graphql/subscriptions.js":"24"},{"size":1600,"mtime":1610869832785,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610600239015,"results":"27","hashOfConfig":"26"},{"size":317,"mtime":1610605336390,"results":"28","hashOfConfig":"26"},{"size":260,"mtime":1610604920648,"results":"29","hashOfConfig":"26"},{"size":186,"mtime":1610781117452,"results":"30","hashOfConfig":"26"},{"size":1163,"mtime":1610604950864,"results":"31","hashOfConfig":"26"},{"size":2072,"mtime":1610916780853,"results":"32","hashOfConfig":"26"},{"size":7261,"mtime":1610928863516,"results":"33","hashOfConfig":"26"},{"size":1290,"mtime":1610916542990,"results":"34","hashOfConfig":"26"},{"size":1838,"mtime":1610867752475,"results":"35","hashOfConfig":"26"},{"size":396,"mtime":1610766864738,"results":"36","hashOfConfig":"26"},{"size":428,"mtime":1610605515999,"results":"37","hashOfConfig":"26"},{"size":2003,"mtime":1610929105902,"results":"38","hashOfConfig":"26"},{"size":4958,"mtime":1610605555309,"results":"39","hashOfConfig":"26"},{"size":235,"mtime":1610878348225,"results":"40","hashOfConfig":"26"},{"size":1253,"mtime":1610916775216,"results":"41","hashOfConfig":"26"},{"size":785,"mtime":1610681369730,"results":"42","hashOfConfig":"26"},{"size":4839,"mtime":1610916452926,"results":"43","hashOfConfig":"26"},{"size":1003,"mtime":1610855383314,"results":"44","hashOfConfig":"26"},{"size":568,"mtime":1610753347755,"results":"45","hashOfConfig":"26"},{"size":1788,"mtime":1610849903972,"results":"46","hashOfConfig":"26"},{"size":1423,"mtime":1610855856886,"results":"47","hashOfConfig":"26"},{"size":1906,"mtime":1610878239327,"results":"48","hashOfConfig":"26"},{"size":864,"mtime":1610877676972,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2qw5lp",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lemonade/Documents/map/client/src/index.js",[],"/Users/lemonade/Documents/map/client/src/reportWebVitals.js",[],"/Users/lemonade/Documents/map/client/src/pages/Splash.js",[],["101","102"],"/Users/lemonade/Documents/map/client/src/pages/App.js",[],"/Users/lemonade/Documents/map/client/src/context.js",[],"/Users/lemonade/Documents/map/client/src/withRoot.js",[],"/Users/lemonade/Documents/map/client/src/components/Header.js",[],"/Users/lemonade/Documents/map/client/src/components/Map.js",["103","104","105","106"],"import React, { useState, useEffect, useContext } from 'react';\nimport MapGL, { NavigationControl, Marker, Popup } from 'react-map-gl';\nimport { withStyles } from '@material-ui/core/styles';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/DeleteTwoTone';\nimport { useClient } from '../client';\nimport { GET_PINS_QUERY } from '../graphql/queries';\nimport { DELETE_PIN_MUTATION } from '../graphql/mutations';\nimport PinIcon from './PinIcon';\nimport Context from '../context';\nimport Blog from './Blog';\nimport { Subscription } from 'react-apollo';\nimport {\n  PIN_ADDED_SUBSCRIPTION,\n  PIN_UPDATED_SUBSCRIPTION,\n  PIN_DELETED_SUBSCRIPTION,\n} from '../graphql/subscriptions';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst INITIAL_VIEWPORT = {\n  latitude: 37.7577,\n  longitude: -122.4376,\n  zoom: 1,\n};\n\nconst Map = ({ classes }) => {\n  const client = useClient();\n  const mobileSize = useMediaQuery('(max-width: 650px)');\n  const { state, dispatch } = useContext(Context);\n  useEffect(() => {\n    getPins();\n  }, []);\n\n  const [viewport, setViewport] = useState({\n    latitude: 37.8,\n    longitude: -122.4,\n    zoom: 14,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const [userPos, setUserPos] = useState(null);\n\n  useEffect(() => {\n    getUserPos();\n  }, []);\n\n  const [popup, setPopup] = useState(null);\n  // remove popup if pin itself is detected by the author of the pin\n  useEffect(() => {\n    const pinExists =\n      popup & (state.pins.findIndex((pin) => pin._id === popup._id) > -1);\n    if (!pinExists) {\n      setPopup(null);\n    }\n  }, [state.pin.length]);\n\n  const getPins = async () => {\n    const { getPins } = await client.request(GET_PINS_QUERY);\n    dispatch({ type: 'GET_PINS', payload: getPins });\n    console.log({ getPins });\n  };\n\n  const getUserPos = () => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setViewport({ ...viewport, latitude, longitude });\n        setUserPos({ latitude, longitude });\n      });\n    }\n  };\n\n  const handleMapClick = ({ lngLat, leftButton }) => {\n    if (!leftButton) {\n      return;\n    }\n    if (!state.draft) {\n      dispatch({ type: 'CREATE_DRAFT' });\n    }\n\n    const [longitude, latitude] = lngLat;\n    dispatch({\n      type: 'UPDATE_DRAFT_LOCATION',\n      payload: { longitude, latitude },\n    });\n  };\n\n  const highlightNewPin = (pin) => {\n    const isNewPin =\n      differenceInMinutes(Date.now(), Number(pin.createdAt)) <= 30;\n    return isNewPin ? 'limegreen' : 'darkblue';\n  };\n\n  const handleSelectPin = (pin) => {\n    setPopup(pin);\n\n    dispatch({ type: 'SET_PIN', payload: pin });\n  };\n\n  const handleDeletePin = async (pin) => {\n    const variables = { pinId: pin._id };\n    await client.request(DELETE_PIN_MUTATION, variables);\n    setPopup(null);\n  };\n\n  const isAuthUser = () => state.currentUser._id === popup.author._id;\n\n  return (\n    <div className={mobileSize ? classes.rootMobile : classes.root}>\n      <MapGL\n        {...viewport}\n        width='100vw'\n        height='100vh'\n        mapStyle='mapbox://styles/mapbox/dark-v9'\n        mapboxApiAccessToken='pk.eyJ1IjoibGlwYWR1cGEiLCJhIjoiY2tqd2YzbWQwMDk2cTJ5cGYwdGVnam5nYyJ9.J15bYPm3-NnsFxPXUCSJbw'\n        scrollZoom={!mobileSize}\n        onViewportChange={(newViewport) => setViewport(newViewport)}\n        onClick={handleMapClick}\n      >\n        {/* /Navigation Control */}\n        <div className={classes.navigationControl}>\n          <NavigationControl\n            onViewportChange={(newViewport) => setViewport(newViewport)}\n          />\n        </div>\n\n        {/* Pin for User's Current Pos */}\n        {userPos && (\n          <Marker\n            latitude={userPos.latitude}\n            longitude={userPos.longitude}\n            offsetLeft={-19}\n            offsetTop={-37}\n          >\n            <PinIcon size={40} color='red' />\n          </Marker>\n        )}\n\n        {/* Draft Pin */}\n        {state.draft && (\n          <Marker\n            latitude={state.draft.latitude}\n            longitude={state.draft.longitude}\n            offsetLeft={-19}\n            offsetTop={-37}\n          >\n            <PinIcon size={40} color='hotpink' />\n          </Marker>\n        )}\n\n        {/* Created Pins */}\n        {state.pins.map((pin) => (\n          <Marker\n            key={pin._id}\n            latitude={pin.latitude}\n            longitude={pin.longitude}\n            offsetLeft={-19}\n            offsetTop={-37}\n          >\n            <PinIcon\n              onClick={() => {\n                // onClick param is eventt\n                handleSelectPin(pin);\n              }}\n              size={40}\n              color={highlightNewPin(pin)}\n            />\n          </Marker>\n        ))}\n\n        {/* Popup Dialog for CreatedPins */}\n        {popup && (\n          <Popup\n            anchor='top'\n            latitude={popup.latitude}\n            longitude={popup.longitude}\n            closeOnClick={false}\n            onClose={() => setPopup(null)}\n          >\n            <img\n              className={classes.popupImage}\n              src={popup.image}\n              alt={popup.title}\n            />\n            <div className={classes.popupTab}>\n              <Typography>\n                {popup.latitude.toFixed(6)}, {popup.longitude.toFixed(6)}\n              </Typography>\n              {isAuthUser() && (\n                <Button onClick={() => handleDeletePin(popup)}>\n                  <DeleteIcon className={classes.deleteIcon} />\n                </Button>\n              )}\n            </div>\n          </Popup>\n        )}\n      </MapGL>\n\n      {/* Subscription for creating / updating / deleting pins */}\n      <Subscription\n        subscription={PIN_ADDED_SUBSCRIPTION}\n        onSubscriptionData={({ subscriptionData }) => {\n          const { pinAdded } = subscriptionData.data;\n          dispatch({ type: 'CREATE_PIN', payload: pinAdded });\n        }}\n      />\n\n      <Subscription\n        subscription={PIN_DELETED_SUBSCRIPTION}\n        onSubscriptionData={({ subscriptionData }) => {\n          const { pinDeleted } = subscriptionData.data;\n          dispatch({ type: 'DELETE_PIN', payload: pinDeleted });\n        }}\n      />\n\n      <Subscription\n        subscription={PIN_UPDATED_SUBSCRIPTION}\n        onSubscriptionData={({ subscriptionData }) => {\n          const { pinUpdated } = subscriptionData.data;\n          dispatch({ type: 'CREATE_COMMENT', payload: pinUpdated });\n        }}\n      />\n\n      {/* Blog Area to add Pin Content*/}\n      <Blog />\n    </div>\n  );\n};\n\nconst styles = {\n  root: {\n    display: 'flex',\n  },\n  rootMobile: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n  },\n  navigationControl: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    margin: '1em',\n  },\n  deleteIcon: {\n    color: 'red',\n  },\n  popupImage: {\n    padding: '0.4em',\n    height: 200,\n    width: 200,\n    objectFit: 'cover',\n  },\n  popupTab: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n};\n\nexport default withStyles(styles)(Map);\n","/Users/lemonade/Documents/map/client/src/components/Auth/Signout.js",[],"/Users/lemonade/Documents/map/client/src/components/Auth/Login.js",[],"/Users/lemonade/Documents/map/client/src/graphql/queries.js",[],"/Users/lemonade/Documents/map/client/src/ProtectedRoute.js",[],"/Users/lemonade/Documents/map/client/src/reducer.js",["107"],"/Users/lemonade/Documents/map/client/src/serviceWorker.js",[],"/Users/lemonade/Documents/map/client/src/components/PinIcon.js",[],"/Users/lemonade/Documents/map/client/src/components/Blog.js",[],"/Users/lemonade/Documents/map/client/src/components/Pin/NoContent.js",[],"/Users/lemonade/Documents/map/client/src/components/Pin/CreatePin.js",[],"/Users/lemonade/Documents/map/client/src/graphql/mutations.js",[],"/Users/lemonade/Documents/map/client/src/client.js",[],"/Users/lemonade/Documents/map/client/src/components/Pin/PinContent.js",[],"/Users/lemonade/Documents/map/client/src/components/Comment/Comments.js",[],"/Users/lemonade/Documents/map/client/src/components/Comment/CreateComment.js",["108"],"import React, { useState, useContext } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SendIcon from '@material-ui/icons/Send';\nimport Divider from '@material-ui/core/Divider';\nimport { CREATE_COMMENT_MUTATION } from '../../graphql/mutations';\nimport { useClient } from '../../client';\nimport Context from '../../context';\n\nconst CreateComment = ({ classes }) => {\n  const client = useClient();\n  const { state, dispatch } = useContext(Context);\n  const [comment, setComment] = useState('');\n\n  const handleSubmitComment = async () => {\n    const variables = { pinId: state.currentPin._id, text: comment };\n    await client.request(CREATE_COMMENT_MUTATION, variables);\n    setComment('');\n  };\n  return (\n    <>\n      <form className={classes.form}>\n        <IconButton\n          onClick={() => setComment('')}\n          disabled={!comment.trim()}\n          className={classes.clearButton}\n        >\n          <ClearIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder='Add Comment'\n          multiline={true}\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n        <IconButton\n          onClick={handleSubmitComment}\n          disabled={!comment.trim()}\n          className={classes.clearButton}\n        >\n          <SendIcon />\n        </IconButton>\n      </form>\n      <Divider />\n    </>\n  );\n};\n\nconst styles = (theme) => ({\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  clearButton: {\n    padding: 0,\n    color: 'red',\n  },\n  sendButton: {\n    padding: 0,\n    color: theme.palette.secondary.dark,\n  },\n});\n\nexport default withStyles(styles)(CreateComment);\n","/Users/lemonade/Documents/map/client/src/graphql/subscriptions.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":22,"column":7,"nodeType":"115","messageId":"116","endLine":22,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":34,"column":6,"nodeType":"119","endLine":34,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":48,"column":6,"nodeType":"119","endLine":48,"endColumn":8,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":58,"column":6,"nodeType":"119","endLine":58,"endColumn":24,"suggestions":"124"},{"ruleId":"125","severity":2,"message":"126","line":63,"column":30,"nodeType":"115","messageId":"127","endLine":63,"endColumn":42},{"ruleId":"113","severity":1,"message":"128","line":14,"column":18,"nodeType":"115","messageId":"116","endLine":14,"endColumn":26},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'INITIAL_VIEWPORT' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPins'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'getUserPos'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'popup' and 'state.pins'. Either include them or remove the dependency array.",["133"],"no-undef","'delettetdPin' is not defined.","undef","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [getPins]",{"range":"140","text":"141"},"Update the dependencies array to be: [getUserPos]",{"range":"142","text":"143"},"Update the dependencies array to be: [popup, state.pin.length, state.pins]",{"range":"144","text":"145"},[1192,1194],"[getPins]",[1429,1431],"[getUserPos]",[1720,1738],"[popup, state.pin.length, state.pins]"]